* git --version: check installed git version

* git update-git-for-windows: update git for Windows

* git config --global --list: check git owner

* git config --global user.name "username": set git username

* git config --global user.email "email@example.com": set git email

* git status: shows the status of the local git repository, for e.g. if a local git repository is present or not, the unstaged files, etc.

* git init: creates an empty local git repository (with "master" branch) in the current working directory to track all the changes

* git init -b main: creates an empty local git repository (with "main" branch) in the current working directory to track all the changes

Notes:

- Github changed the "master" to be "main" as part of the company's effort to remove unnecessary references to slavery and replace them with more inclusive terms.
- The bottom line is, they wanted to get rid of the unpleasant term "master".
- Both are technically the same.

* git add file-name.txt: add file in the git staging area

* git log: shows the commit history

* git commit -m "commit-message": commit changes to git with a commit message

* git commit -a -m "commit-message": commit changes to git directly, skipping the git staging area

* git diff: shows the difference or what exactly has been modified between the latest commit and the modified file/s in the working directory

* git diff --staged: shows the difference between the latest commit and file/s in the staging area

* git add .: add all files in the git staging area

* git rm --cached file-name.txt: remove the file from the local git repository

* git clone https://github.com/username/example.git: clone the remote HTTPS repository to the local machine

* ssh-keygen -o: generate a SSH key to setup the local machine to connect with the remote repository without having to login everytime

Notes:

- Enter the path and file name to save the SSH key (can leave default). THE FOLDER NAME MUST BE .ssh AND WITHIN IT, THE FILE NAME MUST BE id_rsa.
- Enter and re-enter a passphrase (can leave blank).
- Two files will be generated, an identity file and a .pub file containing the public SSH key.
- Copy the public SSH key content in the .pub file.
- Log into Github.
- Open Settings.
- Open SSH and GPG keys.
- Click New SSH key.
- Provide a Title.
- Select Key type as Authentication Key.
- Paste the copied public SSH key.
- Click Add SSH key.

* git remote add origin git@github.com:username/example.git: connect the local repository with the remote repository via a SSH link without having to login if the public SSH key is present both in the local machine and in Github as well

* git push -u origin main: push the commits in the local repository to the main branch of the remote repository

* git remote -v: provides both the shortname and the corresponding URL of the remote repository

* git tag: shows all the tags (commonly used to mark specific versions of a project for release) for the project

* git tag -a tag-name -m "tag-message": creates an annoted tag with a message

* git show tag-name: gives description about a particular tag

* git push origin tag-name: push the tag to the remote repository

* git log --pretty=oneline: shows all commits along with commit id and commit message as an oneliner

* git checkout -b branch-name: create and switch to a new branch

* git branch: shows all branches in the local repository

Note:

- asterik (*) refers to current working branch

* git switch branch-name: switch to mentioned branch

* git checkout branch-name: switch to mentioned branch

* git switch -c branch-name: create and switch to a new branch

* git branch --all: shows all branches along with the branch in the remote repository

* git switch -: switch to the previous branch

* git branch -d branch-name: delete the mentioned branch

